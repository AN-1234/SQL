# Window Function

##a> Over() and partition BY()

create database if not exists Resturant;
use Resturant;

-- 1. Create new column containing average rating of restaurants throught the dataset
select *,  round(avg(rating) over(),2) as 'avg_rating' from restaurant_data_analysis;

-- 2. Create new column containing average rating_count of restaurants throught the dataset
select *,  round(avg(rating_count) over(),0) as 'avg_rating_count' from restaurant_data_analysis;

-- 3. Create new column containing average cost of restaurants throught the dataset
select *,  round(avg(cost) over(),0) as 'avg_cost' from restaurant_data_analysis;

-- 4. Create column containing average, min, max of cost,rating,rating_count of restaurants throught the dataset
select id, name, city, cuisine, rating,
	round(max(rating) over(), 2) as 'max_rating',
    round(avg(rating) over(), 2) as 'avg_rating',
    round(min(rating) over(), 2) as 'min_rating',
    
    round(max(cost) over(), 2) as 'max_cost',
    round(avg(cost) over(), 2) as 'avg_cost',
    round(min(cost) over(), 2) as 'min_cost'
    
from restaurant_data_analysis;

-- 5. Create column containing average cost of the city where that specific restaurant is from
select *, round(avg(cost) over( partition by city) ) as 'avg_cost' from restaurant_data_analysis;

-- 6. Create column containing average cost of the cuisine which that specific restaurant is serving
select *, round(avg(cost) over( partition by cuisine) ) as 'avg_cost' from restaurant_data_analysis;

-- 7. Create both column together
select *, 
	round(avg(cost) over( partition by city) ) as 'avg_cost_city',
    round(avg(cost) over( partition by cuisine) ) as 'avg_cost_cuisine'
from restaurant_data_analysis;

-- 8. List the restaurants whose cost is more than the average cost of the restaurants?
select * from restaurant_data_analysis where cost > (select avg(cost) from restaurant_data_analysis);
select * from (select *, avg(cost) over() as 'avg_cost' from restaurant_data_analysis) t where t.cost > t.avg_cost; 


-- 10. List the restaurants whose cuisine cost is more than the average cost?
select * from (select *, avg(cost) over(partition by cuisine) as 'avg_cost' from restaurant_data_analysis) t where t.cost > t.avg_cost; 

##b> RANK()

-- 1. Rank every restaurant from most expensive to least expensive
select * ,rank() over(order by cost desc) as 'rank' from restaurant_data_analysis;

-- 2. Rank every restaurant from most visited to least visited
select * ,rank() over(order by rating_count desc) as 'rank' from restaurant_data_analysis;

-- 3. Rank every restaurant from most expensive to least expensive as per their city
select * ,rank() over(partition by city order by cost desc) as 'rank' from restaurant_data_analysis;

-- 4. Dense-rank every restaurant from most expensive to least expensive as per their city
select * ,
	rank() over(order by cost desc) as 'rank' ,
	dense_rank() over(order by cost desc) as 'dense_rank' 
from restaurant_data_analysis;

-- 5. Row-number every restaurant from most expensive to least expensive as per their city
select * ,
	rank() over(order by cost desc) as 'rank' ,
	dense_rank() over(order by cost desc) as 'dense_rank',
    row_number() over(order by cost desc) as 'row_number' 
from restaurant_data_analysis;

-- 6. Rank every restaurant from most expensive to least expensive as per their city along with its city [Adilabad - 1, Adilabad - 2]
select *, concat(city,' - ' ,row_number() over(partition by city order by cost desc)) as 'rank' from restaurant_data_analysis;

-- 7. Find top 5 restaurants of every city as per their revenue
select * from (select *, 
				cost*rating_count as 'revenue', 
				row_number() over(partition by city order by rating_count*cost desc) as 'rank' from restaurant_data_analysis) t
where t.rank < 6;

-- 8. Find top 5 restaurants of every cuisine as per their revenue
select * from (select *, 
				cost*rating_count as 'revenue', 
				row_number() over(partition by cuisine order by rating_count*cost desc) as 'rank' from restaurant_data_analysis) t
where t.rank < 6;

# Advance windows Function

-- 1. List the top 5 cuisines as per the revenue generated by top 5 restaurants of every cuisine
select cuisine, sum(rating_count*cost) as 'revenue'from 	
( 	select *, cost*rating_count, 
	row_number() over(partition by cuisine order by cost*rating_count desc) as 'rank'
    from restaurant_data_analysis
) t 
where t.rank < 6
group by cuisine
order by revenue desc;

-- 2. What is the % of the total revenue is generated by top 1% restaurants
select sum(cost*rating_count) as 'revenue' from
	(select *, cost*rating_count, row_number() over(order by cost*rating_count desc) as 'rank'
		from restaurant_data_analysis) t
	where t.rank <= 614;

-- 3. Check the same for top 20% restaurants
select sum(cost*rating_count) as 'revenue' from
	(select *, cost*rating_count, row_number() over(order by cost*rating_count desc) as 'rank'
		from restaurant_data_analysis) t
	where t.rank <= 12280;


-- 4. What % of revenue is generated by top 20% of restaurants with respect to total revenue?
with 
	q1 as (select sum(cost*rating_count) as 'top_revenue' from
			(select *, cost*rating_count, row_number() over(order by cost*rating_count desc) as 'rank'
				from restaurant_data_analysis) t
			where t.rank <= 12280),
	q2 as (select sum(cost*rating_count) as 'total_revenue' from restaurant_data_analysis)
    
select (top_revenue/total_revenue)*100 as 'revenue %' from q1,q2;

